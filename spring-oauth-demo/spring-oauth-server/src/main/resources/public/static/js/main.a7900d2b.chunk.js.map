{"version":3,"sources":["LoginForm.js","index.js"],"names":["FormItem","es_form","Item","copyright","react_default","a","createElement","icon","type","LoginForm","state","submitting","autoLogin","handleSubmit","e","_this","props","form","validateFields","err","values","preventDefault","changeAutoLogin","setState","target","checked","_this$state","this","getFieldDecorator","className","onSubmit","action","method","rules","required","message","input","name","prefix","style","color","placeholder","es_checkbox","onChange","es_button","htmlType","loading","React","Component","WrappedLoginForm","create","ReactDOM","render","src_LoginForm_0","document","getElementById"],"mappings":"gWAIMA,UAAWC,EAAA,EAAKC,MAGhBC,EAAYC,EAAAC,EAAAC,cAAA,6BAAoBF,EAAAC,EAAAC,cAAAC,EAAA,GAAMC,KAAK,cAA/B,YAEZC,6MAEFC,MAAQ,CACJC,YAAY,EACZC,WAAW,KAGfC,aAAe,SAACC,GACZC,EAAKC,MAAMC,KAAKC,eAAe,SAACC,EAAKC,GAE7BD,GACAL,EAAEO,sBAKdC,gBAAkB,SAAAR,GACdC,EAAKQ,SAAS,CACZX,UAAWE,EAAEU,OAAOC,mFAKjB,IAAAC,EAC6BC,KAAKjB,MAA/BE,EADHc,EACGd,UAAWD,EADde,EACcf,WACXiB,EAAsBD,KAAKX,MAAMC,KAAjCW,kBAER,OACExB,EAAAC,EAAAC,cAAA,OAAKuB,UAAU,aACbzB,EAAAC,EAAAC,cAAA,OAAKuB,UAAU,WACXzB,EAAAC,EAAAC,cAAA,OAAKuB,UAAU,UACbzB,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAAA,QAAMuB,UAAU,SAAhB,8BAGJzB,EAAAC,EAAAC,cAAA,OAAKuB,UAAU,QAAf,sEACAzB,EAAAC,EAAAC,cAAAL,EAAA,GAAM6B,SAAUH,KAAKd,aAAckB,OAAO,cAAcC,OAAO,OAAOH,UAAU,cAC1EzB,EAAAC,EAAAC,cAACN,EAAD,KACK4B,EAAkB,WAAY,CAC3BK,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,2CADtCP,CAGGxB,EAAAC,EAAAC,cAAA8B,EAAA,GAAOC,KAAK,WAAWC,OAAQlC,EAAAC,EAAAC,cAAAC,EAAA,GAAMC,KAAK,OAAO+B,MAAO,CAAEC,MAAO,qBAAyBC,YAAY,YAG9GrC,EAAAC,EAAAC,cAACN,EAAD,KACK4B,EAAkB,WAAY,CAC3BK,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,iCADtCP,CAGGxB,EAAAC,EAAAC,cAAA8B,EAAA,GAAOC,KAAK,WAAWC,OAAQlC,EAAAC,EAAAC,cAAAC,EAAA,GAAMC,KAAK,OAAO+B,MAAO,CAAEC,MAAO,qBAAyBhC,KAAK,WAAWiC,YAAY,YAG9HrC,EAAAC,EAAAC,cAACN,EAAD,CAAU6B,UAAU,qBAChBzB,EAAAC,EAAAC,cAAAoC,EAAA,GAAUjB,QAASb,EAAW+B,SAAUhB,KAAKL,iBAA7C,gBAEJlB,EAAAC,EAAAC,cAACN,EAAD,KACII,EAAAC,EAAAC,cAAAsC,EAAA,GAAQpC,KAAK,UAAUqC,SAAS,SAASC,QAASnC,EAAYkB,UAAU,qBAAxE,mBAIdzB,EAAAC,EAAAC,cAAA,OAAKuB,UAAU,QAAf,IAAwB1B,EAAxB,aA5DY4C,IAAMC,WAmEfC,EADUhD,EAAA,EAAKiD,QAALjD,CAAcQ,GCtEvC0C,IAASC,OAAOhD,EAAAC,EAAAC,cAAC+C,EAAD,MAAeC,SAASC,eAAe","file":"static/js/main.a7900d2b.chunk.js","sourcesContent":["import React from 'react';\nimport './LoginForm.css';\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\n\nconst FormItem = Form.Item;\n// TODO: 紫金目前没有svg logo，待有logo时，添加logo\n// const logo = 'https://www.zjtrust.com.cn/my/cn/homepage/xintuo/images/logo.png';\nconst copyright = <div>Copyright 2021 <Icon type=\"copyright\" />guanyang</div>;\n\nclass LoginForm extends React.Component {\n\n    state = {\n        submitting: false,\n        autoLogin: false\n      };\n\n    handleSubmit = (e) => {\n        this.props.form.validateFields((err, values) => {\n            // login请求后，服务端返回302跳转，事件向上传递使用原始方式提交\n            if (err){\n                e.preventDefault();\n            }\n        });\n    }   \n\n    changeAutoLogin = e => {\n        this.setState({\n          autoLogin: e.target.checked,\n        });\n      };\n\n    // TODO: 记住我，功能未实现\n    render() {\n        const { autoLogin, submitting } = this.state;\n        const { getFieldDecorator } = this.props.form;\n\n        return (\n          <div className='container'>\n            <div className='content'>\n                <div className='header'>\n                  <div>\n                    {/* <img alt=\"logo\" className='logo' src={logo} /> */}\n                    <span className='title'>欢迎登录</span>\n                  </div>\n                </div>\n                <div className='desc'>心中有理想，脚下有力量</div>\n                <Form onSubmit={this.handleSubmit} action='/auth/login' method='POST' className=\"login-form\">\n                      <FormItem>\n                          {getFieldDecorator('username', {\n                              rules: [{ required: true, message: '请输入用户名!' }],\n                          })(\n                              <Input name='username' prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"admin\" />\n                          )}\n                      </FormItem>\n                      <FormItem>\n                          {getFieldDecorator('password', {\n                              rules: [{ required: true, message: 'Please input your Password!' }],\n                          })(\n                              <Input name='password' prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"admin\" />\n                          )}\n                      </FormItem>\n                      <FormItem className=\"login-form-forgot\"> \n                          <Checkbox checked={autoLogin} onChange={this.changeAutoLogin}>Remember me</Checkbox>    \n                      </FormItem>\n                      <FormItem>\n                          <Button type=\"primary\" htmlType=\"submit\" loading={submitting} className=\"login-form-button\">登录</Button>\n                      </FormItem>\n                  </Form>\n            </div>\n            <div className='foot'> {copyright} </div>\n          </div>\n        );\n      }\n}\n\nconst WrappedLoginForm = Form.create()(LoginForm);\nexport default WrappedLoginForm;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport LoginForm from './LoginForm';\n\nReactDOM.render(<LoginForm />, document.getElementById('root'));\n\n"],"sourceRoot":""}